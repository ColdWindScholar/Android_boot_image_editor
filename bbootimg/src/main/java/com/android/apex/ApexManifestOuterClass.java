// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apex_manifest.proto

package com.android.apex;

public final class ApexManifestOuterClass {
  private ApexManifestOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ApexManifestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apex.proto.ApexManifest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Package Name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Package Name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Version Number
     * </pre>
     *
     * <code>int64 version = 2;</code>
     * @return The version.
     */
    long getVersion();

    /**
     * <pre>
     * Pre Install Hook
     * </pre>
     *
     * <code>string preInstallHook = 3;</code>
     * @return The preInstallHook.
     */
    java.lang.String getPreInstallHook();
    /**
     * <pre>
     * Pre Install Hook
     * </pre>
     *
     * <code>string preInstallHook = 3;</code>
     * @return The bytes for preInstallHook.
     */
    com.google.protobuf.ByteString
        getPreInstallHookBytes();

    /**
     * <pre>
     * Post Install Hook
     * </pre>
     *
     * <code>string postInstallHook = 4;</code>
     * @return The postInstallHook.
     */
    java.lang.String getPostInstallHook();
    /**
     * <pre>
     * Post Install Hook
     * </pre>
     *
     * <code>string postInstallHook = 4;</code>
     * @return The bytes for postInstallHook.
     */
    com.google.protobuf.ByteString
        getPostInstallHookBytes();

    /**
     * <pre>
     * Version Name
     * </pre>
     *
     * <code>string versionName = 5;</code>
     * @return The versionName.
     */
    java.lang.String getVersionName();
    /**
     * <pre>
     * Version Name
     * </pre>
     *
     * <code>string versionName = 5;</code>
     * @return The bytes for versionName.
     */
    com.google.protobuf.ByteString
        getVersionNameBytes();

    /**
     * <pre>
     * Signals whenever this APEX doesn't contain any executable code.
     * If this field is set to true, then apexd will mount this apex
     * with MS_NOEXEC flag.
     * </pre>
     *
     * <code>bool noCode = 6;</code>
     * @return The noCode.
     */
    boolean getNoCode();

    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @return A list containing the provideNativeLibs.
     */
    java.util.List<java.lang.String>
        getProvideNativeLibsList();
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @return The count of provideNativeLibs.
     */
    int getProvideNativeLibsCount();
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @param index The index of the element to return.
     * @return The provideNativeLibs at the given index.
     */
    java.lang.String getProvideNativeLibs(int index);
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the provideNativeLibs at the given index.
     */
    com.google.protobuf.ByteString
        getProvideNativeLibsBytes(int index);

    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @return A list containing the requireNativeLibs.
     */
    java.util.List<java.lang.String>
        getRequireNativeLibsList();
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @return The count of requireNativeLibs.
     */
    int getRequireNativeLibsCount();
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @param index The index of the element to return.
     * @return The requireNativeLibs at the given index.
     */
    java.lang.String getRequireNativeLibs(int index);
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requireNativeLibs at the given index.
     */
    com.google.protobuf.ByteString
        getRequireNativeLibsBytes(int index);

    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @return A list containing the jniLibs.
     */
    java.util.List<java.lang.String>
        getJniLibsList();
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @return The count of jniLibs.
     */
    int getJniLibsCount();
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @param index The index of the element to return.
     * @return The jniLibs at the given index.
     */
    java.lang.String getJniLibs(int index);
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the jniLibs at the given index.
     */
    com.google.protobuf.ByteString
        getJniLibsBytes(int index);

    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @return A list containing the requireSharedApexLibs.
     */
    java.util.List<java.lang.String>
        getRequireSharedApexLibsList();
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @return The count of requireSharedApexLibs.
     */
    int getRequireSharedApexLibsCount();
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @param index The index of the element to return.
     * @return The requireSharedApexLibs at the given index.
     */
    java.lang.String getRequireSharedApexLibs(int index);
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requireSharedApexLibs at the given index.
     */
    com.google.protobuf.ByteString
        getRequireSharedApexLibsBytes(int index);

    /**
     * <pre>
     * Whether this APEX provides libraries to be shared with other APEXs. This
     * causes libraries contained in the APEX to be made available under
     * /apex/sharedlibs .
     * </pre>
     *
     * <code>bool provideSharedApexLibs = 11;</code>
     * @return The provideSharedApexLibs.
     */
    boolean getProvideSharedApexLibs();

    /**
     * <pre>
     * Exists only for compressed APEX
     * </pre>
     *
     * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
     * @return Whether the capexMetadata field is set.
     */
    boolean hasCapexMetadata();
    /**
     * <pre>
     * Exists only for compressed APEX
     * </pre>
     *
     * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
     * @return The capexMetadata.
     */
    com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata getCapexMetadata();
    /**
     * <pre>
     * Exists only for compressed APEX
     * </pre>
     *
     * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
     */
    com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder getCapexMetadataOrBuilder();

    /**
     * <pre>
     * Indicates that this APEX can be updated without rebooting device.
     * </pre>
     *
     * <code>bool supportsRebootlessUpdate = 13;</code>
     * @return The supportsRebootlessUpdate.
     */
    boolean getSupportsRebootlessUpdate();
  }
  /**
   * Protobuf type {@code apex.proto.ApexManifest}
   */
  public static final class ApexManifest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:apex.proto.ApexManifest)
      ApexManifestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ApexManifest.newBuilder() to construct.
    private ApexManifest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ApexManifest() {
      name_ = "";
      preInstallHook_ = "";
      postInstallHook_ = "";
      versionName_ = "";
      provideNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      requireNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      jniLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      requireSharedApexLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ApexManifest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ApexManifest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              version_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              preInstallHook_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              postInstallHook_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              versionName_ = s;
              break;
            }
            case 48: {

              noCode_ = input.readBool();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                provideNativeLibs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              provideNativeLibs_.add(s);
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                requireNativeLibs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              requireNativeLibs_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                jniLibs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              jniLibs_.add(s);
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                requireSharedApexLibs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              requireSharedApexLibs_.add(s);
              break;
            }
            case 88: {

              provideSharedApexLibs_ = input.readBool();
              break;
            }
            case 98: {
              com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder subBuilder = null;
              if (capexMetadata_ != null) {
                subBuilder = capexMetadata_.toBuilder();
              }
              capexMetadata_ = input.readMessage(com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(capexMetadata_);
                capexMetadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 104: {

              supportsRebootlessUpdate_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          provideNativeLibs_ = provideNativeLibs_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          requireNativeLibs_ = requireNativeLibs_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          jniLibs_ = jniLibs_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          requireSharedApexLibs_ = requireSharedApexLibs_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.apex.ApexManifestOuterClass.ApexManifest.class, com.android.apex.ApexManifestOuterClass.ApexManifest.Builder.class);
    }

    public interface CompressedApexMetadataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:apex.proto.ApexManifest.CompressedApexMetadata)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Valid only for compressed APEX. This field contains the root digest of
       * the original_apex contained inside CAPEX.
       * </pre>
       *
       * <code>string originalApexDigest = 1;</code>
       * @return The originalApexDigest.
       */
      java.lang.String getOriginalApexDigest();
      /**
       * <pre>
       * Valid only for compressed APEX. This field contains the root digest of
       * the original_apex contained inside CAPEX.
       * </pre>
       *
       * <code>string originalApexDigest = 1;</code>
       * @return The bytes for originalApexDigest.
       */
      com.google.protobuf.ByteString
          getOriginalApexDigestBytes();
    }
    /**
     * Protobuf type {@code apex.proto.ApexManifest.CompressedApexMetadata}
     */
    public static final class CompressedApexMetadata extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:apex.proto.ApexManifest.CompressedApexMetadata)
        CompressedApexMetadataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CompressedApexMetadata.newBuilder() to construct.
      private CompressedApexMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CompressedApexMetadata() {
        originalApexDigest_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CompressedApexMetadata();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CompressedApexMetadata(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                originalApexDigest_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_CompressedApexMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_CompressedApexMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.class, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder.class);
      }

      public static final int ORIGINALAPEXDIGEST_FIELD_NUMBER = 1;
      private volatile java.lang.Object originalApexDigest_;
      /**
       * <pre>
       * Valid only for compressed APEX. This field contains the root digest of
       * the original_apex contained inside CAPEX.
       * </pre>
       *
       * <code>string originalApexDigest = 1;</code>
       * @return The originalApexDigest.
       */
      @java.lang.Override
      public java.lang.String getOriginalApexDigest() {
        java.lang.Object ref = originalApexDigest_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          originalApexDigest_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Valid only for compressed APEX. This field contains the root digest of
       * the original_apex contained inside CAPEX.
       * </pre>
       *
       * <code>string originalApexDigest = 1;</code>
       * @return The bytes for originalApexDigest.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOriginalApexDigestBytes() {
        java.lang.Object ref = originalApexDigest_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          originalApexDigest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getOriginalApexDigestBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, originalApexDigest_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getOriginalApexDigestBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, originalApexDigest_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata)) {
          return super.equals(obj);
        }
        com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata other = (com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata) obj;

        if (!getOriginalApexDigest()
            .equals(other.getOriginalApexDigest())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ORIGINALAPEXDIGEST_FIELD_NUMBER;
        hash = (53 * hash) + getOriginalApexDigest().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code apex.proto.ApexManifest.CompressedApexMetadata}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:apex.proto.ApexManifest.CompressedApexMetadata)
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_CompressedApexMetadata_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_CompressedApexMetadata_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.class, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder.class);
        }

        // Construct using com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          originalApexDigest_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_CompressedApexMetadata_descriptor;
        }

        @java.lang.Override
        public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata getDefaultInstanceForType() {
          return com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.getDefaultInstance();
        }

        @java.lang.Override
        public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata build() {
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata buildPartial() {
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata result = new com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata(this);
          result.originalApexDigest_ = originalApexDigest_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata) {
            return mergeFrom((com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata other) {
          if (other == com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.getDefaultInstance()) return this;
          if (!other.getOriginalApexDigest().isEmpty()) {
            originalApexDigest_ = other.originalApexDigest_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object originalApexDigest_ = "";
        /**
         * <pre>
         * Valid only for compressed APEX. This field contains the root digest of
         * the original_apex contained inside CAPEX.
         * </pre>
         *
         * <code>string originalApexDigest = 1;</code>
         * @return The originalApexDigest.
         */
        public java.lang.String getOriginalApexDigest() {
          java.lang.Object ref = originalApexDigest_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            originalApexDigest_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Valid only for compressed APEX. This field contains the root digest of
         * the original_apex contained inside CAPEX.
         * </pre>
         *
         * <code>string originalApexDigest = 1;</code>
         * @return The bytes for originalApexDigest.
         */
        public com.google.protobuf.ByteString
            getOriginalApexDigestBytes() {
          java.lang.Object ref = originalApexDigest_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            originalApexDigest_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Valid only for compressed APEX. This field contains the root digest of
         * the original_apex contained inside CAPEX.
         * </pre>
         *
         * <code>string originalApexDigest = 1;</code>
         * @param value The originalApexDigest to set.
         * @return This builder for chaining.
         */
        public Builder setOriginalApexDigest(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          originalApexDigest_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Valid only for compressed APEX. This field contains the root digest of
         * the original_apex contained inside CAPEX.
         * </pre>
         *
         * <code>string originalApexDigest = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearOriginalApexDigest() {
          
          originalApexDigest_ = getDefaultInstance().getOriginalApexDigest();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Valid only for compressed APEX. This field contains the root digest of
         * the original_apex contained inside CAPEX.
         * </pre>
         *
         * <code>string originalApexDigest = 1;</code>
         * @param value The bytes for originalApexDigest to set.
         * @return This builder for chaining.
         */
        public Builder setOriginalApexDigestBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          originalApexDigest_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:apex.proto.ApexManifest.CompressedApexMetadata)
      }

      // @@protoc_insertion_point(class_scope:apex.proto.ApexManifest.CompressedApexMetadata)
      private static final com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata();
      }

      public static com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CompressedApexMetadata>
          PARSER = new com.google.protobuf.AbstractParser<CompressedApexMetadata>() {
        @java.lang.Override
        public CompressedApexMetadata parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CompressedApexMetadata(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CompressedApexMetadata> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CompressedApexMetadata> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Package Name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Package Name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private long version_;
    /**
     * <pre>
     * Version Number
     * </pre>
     *
     * <code>int64 version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public long getVersion() {
      return version_;
    }

    public static final int PREINSTALLHOOK_FIELD_NUMBER = 3;
    private volatile java.lang.Object preInstallHook_;
    /**
     * <pre>
     * Pre Install Hook
     * </pre>
     *
     * <code>string preInstallHook = 3;</code>
     * @return The preInstallHook.
     */
    @java.lang.Override
    public java.lang.String getPreInstallHook() {
      java.lang.Object ref = preInstallHook_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        preInstallHook_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Pre Install Hook
     * </pre>
     *
     * <code>string preInstallHook = 3;</code>
     * @return The bytes for preInstallHook.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPreInstallHookBytes() {
      java.lang.Object ref = preInstallHook_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        preInstallHook_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSTINSTALLHOOK_FIELD_NUMBER = 4;
    private volatile java.lang.Object postInstallHook_;
    /**
     * <pre>
     * Post Install Hook
     * </pre>
     *
     * <code>string postInstallHook = 4;</code>
     * @return The postInstallHook.
     */
    @java.lang.Override
    public java.lang.String getPostInstallHook() {
      java.lang.Object ref = postInstallHook_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        postInstallHook_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Post Install Hook
     * </pre>
     *
     * <code>string postInstallHook = 4;</code>
     * @return The bytes for postInstallHook.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPostInstallHookBytes() {
      java.lang.Object ref = postInstallHook_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        postInstallHook_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSIONNAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object versionName_;
    /**
     * <pre>
     * Version Name
     * </pre>
     *
     * <code>string versionName = 5;</code>
     * @return The versionName.
     */
    @java.lang.Override
    public java.lang.String getVersionName() {
      java.lang.Object ref = versionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        versionName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Version Name
     * </pre>
     *
     * <code>string versionName = 5;</code>
     * @return The bytes for versionName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionNameBytes() {
      java.lang.Object ref = versionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        versionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NOCODE_FIELD_NUMBER = 6;
    private boolean noCode_;
    /**
     * <pre>
     * Signals whenever this APEX doesn't contain any executable code.
     * If this field is set to true, then apexd will mount this apex
     * with MS_NOEXEC flag.
     * </pre>
     *
     * <code>bool noCode = 6;</code>
     * @return The noCode.
     */
    @java.lang.Override
    public boolean getNoCode() {
      return noCode_;
    }

    public static final int PROVIDENATIVELIBS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList provideNativeLibs_;
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @return A list containing the provideNativeLibs.
     */
    public com.google.protobuf.ProtocolStringList
        getProvideNativeLibsList() {
      return provideNativeLibs_;
    }
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @return The count of provideNativeLibs.
     */
    public int getProvideNativeLibsCount() {
      return provideNativeLibs_.size();
    }
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @param index The index of the element to return.
     * @return The provideNativeLibs at the given index.
     */
    public java.lang.String getProvideNativeLibs(int index) {
      return provideNativeLibs_.get(index);
    }
    /**
     * <pre>
     * List of native libs which can be used by other apexes or system.
     * </pre>
     *
     * <code>repeated string provideNativeLibs = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the provideNativeLibs at the given index.
     */
    public com.google.protobuf.ByteString
        getProvideNativeLibsBytes(int index) {
      return provideNativeLibs_.getByteString(index);
    }

    public static final int REQUIRENATIVELIBS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList requireNativeLibs_;
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @return A list containing the requireNativeLibs.
     */
    public com.google.protobuf.ProtocolStringList
        getRequireNativeLibsList() {
      return requireNativeLibs_;
    }
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @return The count of requireNativeLibs.
     */
    public int getRequireNativeLibsCount() {
      return requireNativeLibs_.size();
    }
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @param index The index of the element to return.
     * @return The requireNativeLibs at the given index.
     */
    public java.lang.String getRequireNativeLibs(int index) {
      return requireNativeLibs_.get(index);
    }
    /**
     * <pre>
     * List of native libs which this apex uses from other apexes or system.
     * </pre>
     *
     * <code>repeated string requireNativeLibs = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requireNativeLibs at the given index.
     */
    public com.google.protobuf.ByteString
        getRequireNativeLibsBytes(int index) {
      return requireNativeLibs_.getByteString(index);
    }

    public static final int JNILIBS_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList jniLibs_;
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @return A list containing the jniLibs.
     */
    public com.google.protobuf.ProtocolStringList
        getJniLibsList() {
      return jniLibs_;
    }
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @return The count of jniLibs.
     */
    public int getJniLibsCount() {
      return jniLibs_.size();
    }
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @param index The index of the element to return.
     * @return The jniLibs at the given index.
     */
    public java.lang.String getJniLibs(int index) {
      return jniLibs_.get(index);
    }
    /**
     * <pre>
     * List of JNI libs.
     * linkerconfig/libnativeloader use this field so that java libraries can
     * load JNI libraries in the same apex.
     * This is supposed to be filled by the build system with libraries which are
     * marked as "is_jni: true" from the list of "native_shared_libs".
     * </pre>
     *
     * <code>repeated string jniLibs = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the jniLibs at the given index.
     */
    public com.google.protobuf.ByteString
        getJniLibsBytes(int index) {
      return jniLibs_.getByteString(index);
    }

    public static final int REQUIRESHAREDAPEXLIBS_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList requireSharedApexLibs_;
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @return A list containing the requireSharedApexLibs.
     */
    public com.google.protobuf.ProtocolStringList
        getRequireSharedApexLibsList() {
      return requireSharedApexLibs_;
    }
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @return The count of requireSharedApexLibs.
     */
    public int getRequireSharedApexLibsCount() {
      return requireSharedApexLibs_.size();
    }
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @param index The index of the element to return.
     * @return The requireSharedApexLibs at the given index.
     */
    public java.lang.String getRequireSharedApexLibs(int index) {
      return requireSharedApexLibs_.get(index);
    }
    /**
     * <pre>
     * List of libs required that are located in a shared libraries APEX.
     * Format of the content is 'library:hash'.
     * Example) libc++.so:83d8f50...
     * </pre>
     *
     * <code>repeated string requireSharedApexLibs = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requireSharedApexLibs at the given index.
     */
    public com.google.protobuf.ByteString
        getRequireSharedApexLibsBytes(int index) {
      return requireSharedApexLibs_.getByteString(index);
    }

    public static final int PROVIDESHAREDAPEXLIBS_FIELD_NUMBER = 11;
    private boolean provideSharedApexLibs_;
    /**
     * <pre>
     * Whether this APEX provides libraries to be shared with other APEXs. This
     * causes libraries contained in the APEX to be made available under
     * /apex/sharedlibs .
     * </pre>
     *
     * <code>bool provideSharedApexLibs = 11;</code>
     * @return The provideSharedApexLibs.
     */
    @java.lang.Override
    public boolean getProvideSharedApexLibs() {
      return provideSharedApexLibs_;
    }

    public static final int CAPEXMETADATA_FIELD_NUMBER = 12;
    private com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata capexMetadata_;
    /**
     * <pre>
     * Exists only for compressed APEX
     * </pre>
     *
     * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
     * @return Whether the capexMetadata field is set.
     */
    @java.lang.Override
    public boolean hasCapexMetadata() {
      return capexMetadata_ != null;
    }
    /**
     * <pre>
     * Exists only for compressed APEX
     * </pre>
     *
     * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
     * @return The capexMetadata.
     */
    @java.lang.Override
    public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata getCapexMetadata() {
      return capexMetadata_ == null ? com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.getDefaultInstance() : capexMetadata_;
    }
    /**
     * <pre>
     * Exists only for compressed APEX
     * </pre>
     *
     * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
     */
    @java.lang.Override
    public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder getCapexMetadataOrBuilder() {
      return getCapexMetadata();
    }

    public static final int SUPPORTSREBOOTLESSUPDATE_FIELD_NUMBER = 13;
    private boolean supportsRebootlessUpdate_;
    /**
     * <pre>
     * Indicates that this APEX can be updated without rebooting device.
     * </pre>
     *
     * <code>bool supportsRebootlessUpdate = 13;</code>
     * @return The supportsRebootlessUpdate.
     */
    @java.lang.Override
    public boolean getSupportsRebootlessUpdate() {
      return supportsRebootlessUpdate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (version_ != 0L) {
        output.writeInt64(2, version_);
      }
      if (!getPreInstallHookBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, preInstallHook_);
      }
      if (!getPostInstallHookBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, postInstallHook_);
      }
      if (!getVersionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, versionName_);
      }
      if (noCode_ != false) {
        output.writeBool(6, noCode_);
      }
      for (int i = 0; i < provideNativeLibs_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, provideNativeLibs_.getRaw(i));
      }
      for (int i = 0; i < requireNativeLibs_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, requireNativeLibs_.getRaw(i));
      }
      for (int i = 0; i < jniLibs_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, jniLibs_.getRaw(i));
      }
      for (int i = 0; i < requireSharedApexLibs_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, requireSharedApexLibs_.getRaw(i));
      }
      if (provideSharedApexLibs_ != false) {
        output.writeBool(11, provideSharedApexLibs_);
      }
      if (capexMetadata_ != null) {
        output.writeMessage(12, getCapexMetadata());
      }
      if (supportsRebootlessUpdate_ != false) {
        output.writeBool(13, supportsRebootlessUpdate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (version_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, version_);
      }
      if (!getPreInstallHookBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, preInstallHook_);
      }
      if (!getPostInstallHookBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, postInstallHook_);
      }
      if (!getVersionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, versionName_);
      }
      if (noCode_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, noCode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < provideNativeLibs_.size(); i++) {
          dataSize += computeStringSizeNoTag(provideNativeLibs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getProvideNativeLibsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireNativeLibs_.size(); i++) {
          dataSize += computeStringSizeNoTag(requireNativeLibs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRequireNativeLibsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jniLibs_.size(); i++) {
          dataSize += computeStringSizeNoTag(jniLibs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getJniLibsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireSharedApexLibs_.size(); i++) {
          dataSize += computeStringSizeNoTag(requireSharedApexLibs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRequireSharedApexLibsList().size();
      }
      if (provideSharedApexLibs_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, provideSharedApexLibs_);
      }
      if (capexMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getCapexMetadata());
      }
      if (supportsRebootlessUpdate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, supportsRebootlessUpdate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.apex.ApexManifestOuterClass.ApexManifest)) {
        return super.equals(obj);
      }
      com.android.apex.ApexManifestOuterClass.ApexManifest other = (com.android.apex.ApexManifestOuterClass.ApexManifest) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getVersion()
          != other.getVersion()) return false;
      if (!getPreInstallHook()
          .equals(other.getPreInstallHook())) return false;
      if (!getPostInstallHook()
          .equals(other.getPostInstallHook())) return false;
      if (!getVersionName()
          .equals(other.getVersionName())) return false;
      if (getNoCode()
          != other.getNoCode()) return false;
      if (!getProvideNativeLibsList()
          .equals(other.getProvideNativeLibsList())) return false;
      if (!getRequireNativeLibsList()
          .equals(other.getRequireNativeLibsList())) return false;
      if (!getJniLibsList()
          .equals(other.getJniLibsList())) return false;
      if (!getRequireSharedApexLibsList()
          .equals(other.getRequireSharedApexLibsList())) return false;
      if (getProvideSharedApexLibs()
          != other.getProvideSharedApexLibs()) return false;
      if (hasCapexMetadata() != other.hasCapexMetadata()) return false;
      if (hasCapexMetadata()) {
        if (!getCapexMetadata()
            .equals(other.getCapexMetadata())) return false;
      }
      if (getSupportsRebootlessUpdate()
          != other.getSupportsRebootlessUpdate()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersion());
      hash = (37 * hash) + PREINSTALLHOOK_FIELD_NUMBER;
      hash = (53 * hash) + getPreInstallHook().hashCode();
      hash = (37 * hash) + POSTINSTALLHOOK_FIELD_NUMBER;
      hash = (53 * hash) + getPostInstallHook().hashCode();
      hash = (37 * hash) + VERSIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getVersionName().hashCode();
      hash = (37 * hash) + NOCODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNoCode());
      if (getProvideNativeLibsCount() > 0) {
        hash = (37 * hash) + PROVIDENATIVELIBS_FIELD_NUMBER;
        hash = (53 * hash) + getProvideNativeLibsList().hashCode();
      }
      if (getRequireNativeLibsCount() > 0) {
        hash = (37 * hash) + REQUIRENATIVELIBS_FIELD_NUMBER;
        hash = (53 * hash) + getRequireNativeLibsList().hashCode();
      }
      if (getJniLibsCount() > 0) {
        hash = (37 * hash) + JNILIBS_FIELD_NUMBER;
        hash = (53 * hash) + getJniLibsList().hashCode();
      }
      if (getRequireSharedApexLibsCount() > 0) {
        hash = (37 * hash) + REQUIRESHAREDAPEXLIBS_FIELD_NUMBER;
        hash = (53 * hash) + getRequireSharedApexLibsList().hashCode();
      }
      hash = (37 * hash) + PROVIDESHAREDAPEXLIBS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProvideSharedApexLibs());
      if (hasCapexMetadata()) {
        hash = (37 * hash) + CAPEXMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getCapexMetadata().hashCode();
      }
      hash = (37 * hash) + SUPPORTSREBOOTLESSUPDATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSupportsRebootlessUpdate());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.apex.ApexManifestOuterClass.ApexManifest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.apex.ApexManifestOuterClass.ApexManifest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apex.proto.ApexManifest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apex.proto.ApexManifest)
        com.android.apex.ApexManifestOuterClass.ApexManifestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.apex.ApexManifestOuterClass.ApexManifest.class, com.android.apex.ApexManifestOuterClass.ApexManifest.Builder.class);
      }

      // Construct using com.android.apex.ApexManifestOuterClass.ApexManifest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        version_ = 0L;

        preInstallHook_ = "";

        postInstallHook_ = "";

        versionName_ = "";

        noCode_ = false;

        provideNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        requireNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        jniLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        requireSharedApexLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        provideSharedApexLibs_ = false;

        if (capexMetadataBuilder_ == null) {
          capexMetadata_ = null;
        } else {
          capexMetadata_ = null;
          capexMetadataBuilder_ = null;
        }
        supportsRebootlessUpdate_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.apex.ApexManifestOuterClass.internal_static_apex_proto_ApexManifest_descriptor;
      }

      @java.lang.Override
      public com.android.apex.ApexManifestOuterClass.ApexManifest getDefaultInstanceForType() {
        return com.android.apex.ApexManifestOuterClass.ApexManifest.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.apex.ApexManifestOuterClass.ApexManifest build() {
        com.android.apex.ApexManifestOuterClass.ApexManifest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.apex.ApexManifestOuterClass.ApexManifest buildPartial() {
        com.android.apex.ApexManifestOuterClass.ApexManifest result = new com.android.apex.ApexManifestOuterClass.ApexManifest(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.version_ = version_;
        result.preInstallHook_ = preInstallHook_;
        result.postInstallHook_ = postInstallHook_;
        result.versionName_ = versionName_;
        result.noCode_ = noCode_;
        if (((bitField0_ & 0x00000001) != 0)) {
          provideNativeLibs_ = provideNativeLibs_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.provideNativeLibs_ = provideNativeLibs_;
        if (((bitField0_ & 0x00000002) != 0)) {
          requireNativeLibs_ = requireNativeLibs_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.requireNativeLibs_ = requireNativeLibs_;
        if (((bitField0_ & 0x00000004) != 0)) {
          jniLibs_ = jniLibs_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.jniLibs_ = jniLibs_;
        if (((bitField0_ & 0x00000008) != 0)) {
          requireSharedApexLibs_ = requireSharedApexLibs_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.requireSharedApexLibs_ = requireSharedApexLibs_;
        result.provideSharedApexLibs_ = provideSharedApexLibs_;
        if (capexMetadataBuilder_ == null) {
          result.capexMetadata_ = capexMetadata_;
        } else {
          result.capexMetadata_ = capexMetadataBuilder_.build();
        }
        result.supportsRebootlessUpdate_ = supportsRebootlessUpdate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.apex.ApexManifestOuterClass.ApexManifest) {
          return mergeFrom((com.android.apex.ApexManifestOuterClass.ApexManifest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.apex.ApexManifestOuterClass.ApexManifest other) {
        if (other == com.android.apex.ApexManifestOuterClass.ApexManifest.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getVersion() != 0L) {
          setVersion(other.getVersion());
        }
        if (!other.getPreInstallHook().isEmpty()) {
          preInstallHook_ = other.preInstallHook_;
          onChanged();
        }
        if (!other.getPostInstallHook().isEmpty()) {
          postInstallHook_ = other.postInstallHook_;
          onChanged();
        }
        if (!other.getVersionName().isEmpty()) {
          versionName_ = other.versionName_;
          onChanged();
        }
        if (other.getNoCode() != false) {
          setNoCode(other.getNoCode());
        }
        if (!other.provideNativeLibs_.isEmpty()) {
          if (provideNativeLibs_.isEmpty()) {
            provideNativeLibs_ = other.provideNativeLibs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureProvideNativeLibsIsMutable();
            provideNativeLibs_.addAll(other.provideNativeLibs_);
          }
          onChanged();
        }
        if (!other.requireNativeLibs_.isEmpty()) {
          if (requireNativeLibs_.isEmpty()) {
            requireNativeLibs_ = other.requireNativeLibs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRequireNativeLibsIsMutable();
            requireNativeLibs_.addAll(other.requireNativeLibs_);
          }
          onChanged();
        }
        if (!other.jniLibs_.isEmpty()) {
          if (jniLibs_.isEmpty()) {
            jniLibs_ = other.jniLibs_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureJniLibsIsMutable();
            jniLibs_.addAll(other.jniLibs_);
          }
          onChanged();
        }
        if (!other.requireSharedApexLibs_.isEmpty()) {
          if (requireSharedApexLibs_.isEmpty()) {
            requireSharedApexLibs_ = other.requireSharedApexLibs_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRequireSharedApexLibsIsMutable();
            requireSharedApexLibs_.addAll(other.requireSharedApexLibs_);
          }
          onChanged();
        }
        if (other.getProvideSharedApexLibs() != false) {
          setProvideSharedApexLibs(other.getProvideSharedApexLibs());
        }
        if (other.hasCapexMetadata()) {
          mergeCapexMetadata(other.getCapexMetadata());
        }
        if (other.getSupportsRebootlessUpdate() != false) {
          setSupportsRebootlessUpdate(other.getSupportsRebootlessUpdate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.apex.ApexManifestOuterClass.ApexManifest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.apex.ApexManifestOuterClass.ApexManifest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Package Name
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Package Name
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Package Name
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Package Name
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Package Name
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private long version_ ;
      /**
       * <pre>
       * Version Number
       * </pre>
       *
       * <code>int64 version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public long getVersion() {
        return version_;
      }
      /**
       * <pre>
       * Version Number
       * </pre>
       *
       * <code>int64 version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(long value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version Number
       * </pre>
       *
       * <code>int64 version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object preInstallHook_ = "";
      /**
       * <pre>
       * Pre Install Hook
       * </pre>
       *
       * <code>string preInstallHook = 3;</code>
       * @return The preInstallHook.
       */
      public java.lang.String getPreInstallHook() {
        java.lang.Object ref = preInstallHook_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          preInstallHook_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Pre Install Hook
       * </pre>
       *
       * <code>string preInstallHook = 3;</code>
       * @return The bytes for preInstallHook.
       */
      public com.google.protobuf.ByteString
          getPreInstallHookBytes() {
        java.lang.Object ref = preInstallHook_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          preInstallHook_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Pre Install Hook
       * </pre>
       *
       * <code>string preInstallHook = 3;</code>
       * @param value The preInstallHook to set.
       * @return This builder for chaining.
       */
      public Builder setPreInstallHook(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        preInstallHook_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pre Install Hook
       * </pre>
       *
       * <code>string preInstallHook = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreInstallHook() {
        
        preInstallHook_ = getDefaultInstance().getPreInstallHook();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pre Install Hook
       * </pre>
       *
       * <code>string preInstallHook = 3;</code>
       * @param value The bytes for preInstallHook to set.
       * @return This builder for chaining.
       */
      public Builder setPreInstallHookBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        preInstallHook_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object postInstallHook_ = "";
      /**
       * <pre>
       * Post Install Hook
       * </pre>
       *
       * <code>string postInstallHook = 4;</code>
       * @return The postInstallHook.
       */
      public java.lang.String getPostInstallHook() {
        java.lang.Object ref = postInstallHook_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          postInstallHook_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Post Install Hook
       * </pre>
       *
       * <code>string postInstallHook = 4;</code>
       * @return The bytes for postInstallHook.
       */
      public com.google.protobuf.ByteString
          getPostInstallHookBytes() {
        java.lang.Object ref = postInstallHook_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          postInstallHook_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Post Install Hook
       * </pre>
       *
       * <code>string postInstallHook = 4;</code>
       * @param value The postInstallHook to set.
       * @return This builder for chaining.
       */
      public Builder setPostInstallHook(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        postInstallHook_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Post Install Hook
       * </pre>
       *
       * <code>string postInstallHook = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPostInstallHook() {
        
        postInstallHook_ = getDefaultInstance().getPostInstallHook();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Post Install Hook
       * </pre>
       *
       * <code>string postInstallHook = 4;</code>
       * @param value The bytes for postInstallHook to set.
       * @return This builder for chaining.
       */
      public Builder setPostInstallHookBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        postInstallHook_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object versionName_ = "";
      /**
       * <pre>
       * Version Name
       * </pre>
       *
       * <code>string versionName = 5;</code>
       * @return The versionName.
       */
      public java.lang.String getVersionName() {
        java.lang.Object ref = versionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          versionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Version Name
       * </pre>
       *
       * <code>string versionName = 5;</code>
       * @return The bytes for versionName.
       */
      public com.google.protobuf.ByteString
          getVersionNameBytes() {
        java.lang.Object ref = versionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          versionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Version Name
       * </pre>
       *
       * <code>string versionName = 5;</code>
       * @param value The versionName to set.
       * @return This builder for chaining.
       */
      public Builder setVersionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        versionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version Name
       * </pre>
       *
       * <code>string versionName = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionName() {
        
        versionName_ = getDefaultInstance().getVersionName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version Name
       * </pre>
       *
       * <code>string versionName = 5;</code>
       * @param value The bytes for versionName to set.
       * @return This builder for chaining.
       */
      public Builder setVersionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        versionName_ = value;
        onChanged();
        return this;
      }

      private boolean noCode_ ;
      /**
       * <pre>
       * Signals whenever this APEX doesn't contain any executable code.
       * If this field is set to true, then apexd will mount this apex
       * with MS_NOEXEC flag.
       * </pre>
       *
       * <code>bool noCode = 6;</code>
       * @return The noCode.
       */
      @java.lang.Override
      public boolean getNoCode() {
        return noCode_;
      }
      /**
       * <pre>
       * Signals whenever this APEX doesn't contain any executable code.
       * If this field is set to true, then apexd will mount this apex
       * with MS_NOEXEC flag.
       * </pre>
       *
       * <code>bool noCode = 6;</code>
       * @param value The noCode to set.
       * @return This builder for chaining.
       */
      public Builder setNoCode(boolean value) {
        
        noCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signals whenever this APEX doesn't contain any executable code.
       * If this field is set to true, then apexd will mount this apex
       * with MS_NOEXEC flag.
       * </pre>
       *
       * <code>bool noCode = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNoCode() {
        
        noCode_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList provideNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureProvideNativeLibsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          provideNativeLibs_ = new com.google.protobuf.LazyStringArrayList(provideNativeLibs_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @return A list containing the provideNativeLibs.
       */
      public com.google.protobuf.ProtocolStringList
          getProvideNativeLibsList() {
        return provideNativeLibs_.getUnmodifiableView();
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @return The count of provideNativeLibs.
       */
      public int getProvideNativeLibsCount() {
        return provideNativeLibs_.size();
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @param index The index of the element to return.
       * @return The provideNativeLibs at the given index.
       */
      public java.lang.String getProvideNativeLibs(int index) {
        return provideNativeLibs_.get(index);
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the provideNativeLibs at the given index.
       */
      public com.google.protobuf.ByteString
          getProvideNativeLibsBytes(int index) {
        return provideNativeLibs_.getByteString(index);
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @param index The index to set the value at.
       * @param value The provideNativeLibs to set.
       * @return This builder for chaining.
       */
      public Builder setProvideNativeLibs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProvideNativeLibsIsMutable();
        provideNativeLibs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @param value The provideNativeLibs to add.
       * @return This builder for chaining.
       */
      public Builder addProvideNativeLibs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProvideNativeLibsIsMutable();
        provideNativeLibs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @param values The provideNativeLibs to add.
       * @return This builder for chaining.
       */
      public Builder addAllProvideNativeLibs(
          java.lang.Iterable<java.lang.String> values) {
        ensureProvideNativeLibsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, provideNativeLibs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearProvideNativeLibs() {
        provideNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which can be used by other apexes or system.
       * </pre>
       *
       * <code>repeated string provideNativeLibs = 7;</code>
       * @param value The bytes of the provideNativeLibs to add.
       * @return This builder for chaining.
       */
      public Builder addProvideNativeLibsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureProvideNativeLibsIsMutable();
        provideNativeLibs_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList requireNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRequireNativeLibsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          requireNativeLibs_ = new com.google.protobuf.LazyStringArrayList(requireNativeLibs_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @return A list containing the requireNativeLibs.
       */
      public com.google.protobuf.ProtocolStringList
          getRequireNativeLibsList() {
        return requireNativeLibs_.getUnmodifiableView();
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @return The count of requireNativeLibs.
       */
      public int getRequireNativeLibsCount() {
        return requireNativeLibs_.size();
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @param index The index of the element to return.
       * @return The requireNativeLibs at the given index.
       */
      public java.lang.String getRequireNativeLibs(int index) {
        return requireNativeLibs_.get(index);
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the requireNativeLibs at the given index.
       */
      public com.google.protobuf.ByteString
          getRequireNativeLibsBytes(int index) {
        return requireNativeLibs_.getByteString(index);
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @param index The index to set the value at.
       * @param value The requireNativeLibs to set.
       * @return This builder for chaining.
       */
      public Builder setRequireNativeLibs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequireNativeLibsIsMutable();
        requireNativeLibs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @param value The requireNativeLibs to add.
       * @return This builder for chaining.
       */
      public Builder addRequireNativeLibs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequireNativeLibsIsMutable();
        requireNativeLibs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @param values The requireNativeLibs to add.
       * @return This builder for chaining.
       */
      public Builder addAllRequireNativeLibs(
          java.lang.Iterable<java.lang.String> values) {
        ensureRequireNativeLibsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requireNativeLibs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequireNativeLibs() {
        requireNativeLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of native libs which this apex uses from other apexes or system.
       * </pre>
       *
       * <code>repeated string requireNativeLibs = 8;</code>
       * @param value The bytes of the requireNativeLibs to add.
       * @return This builder for chaining.
       */
      public Builder addRequireNativeLibsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRequireNativeLibsIsMutable();
        requireNativeLibs_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList jniLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureJniLibsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          jniLibs_ = new com.google.protobuf.LazyStringArrayList(jniLibs_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @return A list containing the jniLibs.
       */
      public com.google.protobuf.ProtocolStringList
          getJniLibsList() {
        return jniLibs_.getUnmodifiableView();
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @return The count of jniLibs.
       */
      public int getJniLibsCount() {
        return jniLibs_.size();
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @param index The index of the element to return.
       * @return The jniLibs at the given index.
       */
      public java.lang.String getJniLibs(int index) {
        return jniLibs_.get(index);
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @param index The index of the value to return.
       * @return The bytes of the jniLibs at the given index.
       */
      public com.google.protobuf.ByteString
          getJniLibsBytes(int index) {
        return jniLibs_.getByteString(index);
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @param index The index to set the value at.
       * @param value The jniLibs to set.
       * @return This builder for chaining.
       */
      public Builder setJniLibs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureJniLibsIsMutable();
        jniLibs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @param value The jniLibs to add.
       * @return This builder for chaining.
       */
      public Builder addJniLibs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureJniLibsIsMutable();
        jniLibs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @param values The jniLibs to add.
       * @return This builder for chaining.
       */
      public Builder addAllJniLibs(
          java.lang.Iterable<java.lang.String> values) {
        ensureJniLibsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, jniLibs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearJniLibs() {
        jniLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of JNI libs.
       * linkerconfig/libnativeloader use this field so that java libraries can
       * load JNI libraries in the same apex.
       * This is supposed to be filled by the build system with libraries which are
       * marked as "is_jni: true" from the list of "native_shared_libs".
       * </pre>
       *
       * <code>repeated string jniLibs = 9;</code>
       * @param value The bytes of the jniLibs to add.
       * @return This builder for chaining.
       */
      public Builder addJniLibsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureJniLibsIsMutable();
        jniLibs_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList requireSharedApexLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRequireSharedApexLibsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          requireSharedApexLibs_ = new com.google.protobuf.LazyStringArrayList(requireSharedApexLibs_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @return A list containing the requireSharedApexLibs.
       */
      public com.google.protobuf.ProtocolStringList
          getRequireSharedApexLibsList() {
        return requireSharedApexLibs_.getUnmodifiableView();
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @return The count of requireSharedApexLibs.
       */
      public int getRequireSharedApexLibsCount() {
        return requireSharedApexLibs_.size();
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @param index The index of the element to return.
       * @return The requireSharedApexLibs at the given index.
       */
      public java.lang.String getRequireSharedApexLibs(int index) {
        return requireSharedApexLibs_.get(index);
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @param index The index of the value to return.
       * @return The bytes of the requireSharedApexLibs at the given index.
       */
      public com.google.protobuf.ByteString
          getRequireSharedApexLibsBytes(int index) {
        return requireSharedApexLibs_.getByteString(index);
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @param index The index to set the value at.
       * @param value The requireSharedApexLibs to set.
       * @return This builder for chaining.
       */
      public Builder setRequireSharedApexLibs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequireSharedApexLibsIsMutable();
        requireSharedApexLibs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @param value The requireSharedApexLibs to add.
       * @return This builder for chaining.
       */
      public Builder addRequireSharedApexLibs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequireSharedApexLibsIsMutable();
        requireSharedApexLibs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @param values The requireSharedApexLibs to add.
       * @return This builder for chaining.
       */
      public Builder addAllRequireSharedApexLibs(
          java.lang.Iterable<java.lang.String> values) {
        ensureRequireSharedApexLibsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requireSharedApexLibs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequireSharedApexLibs() {
        requireSharedApexLibs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of libs required that are located in a shared libraries APEX.
       * Format of the content is 'library:hash'.
       * Example) libc++.so:83d8f50...
       * </pre>
       *
       * <code>repeated string requireSharedApexLibs = 10;</code>
       * @param value The bytes of the requireSharedApexLibs to add.
       * @return This builder for chaining.
       */
      public Builder addRequireSharedApexLibsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRequireSharedApexLibsIsMutable();
        requireSharedApexLibs_.add(value);
        onChanged();
        return this;
      }

      private boolean provideSharedApexLibs_ ;
      /**
       * <pre>
       * Whether this APEX provides libraries to be shared with other APEXs. This
       * causes libraries contained in the APEX to be made available under
       * /apex/sharedlibs .
       * </pre>
       *
       * <code>bool provideSharedApexLibs = 11;</code>
       * @return The provideSharedApexLibs.
       */
      @java.lang.Override
      public boolean getProvideSharedApexLibs() {
        return provideSharedApexLibs_;
      }
      /**
       * <pre>
       * Whether this APEX provides libraries to be shared with other APEXs. This
       * causes libraries contained in the APEX to be made available under
       * /apex/sharedlibs .
       * </pre>
       *
       * <code>bool provideSharedApexLibs = 11;</code>
       * @param value The provideSharedApexLibs to set.
       * @return This builder for chaining.
       */
      public Builder setProvideSharedApexLibs(boolean value) {
        
        provideSharedApexLibs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this APEX provides libraries to be shared with other APEXs. This
       * causes libraries contained in the APEX to be made available under
       * /apex/sharedlibs .
       * </pre>
       *
       * <code>bool provideSharedApexLibs = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearProvideSharedApexLibs() {
        
        provideSharedApexLibs_ = false;
        onChanged();
        return this;
      }

      private com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata capexMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder> capexMetadataBuilder_;
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       * @return Whether the capexMetadata field is set.
       */
      public boolean hasCapexMetadata() {
        return capexMetadataBuilder_ != null || capexMetadata_ != null;
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       * @return The capexMetadata.
       */
      public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata getCapexMetadata() {
        if (capexMetadataBuilder_ == null) {
          return capexMetadata_ == null ? com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.getDefaultInstance() : capexMetadata_;
        } else {
          return capexMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      public Builder setCapexMetadata(com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata value) {
        if (capexMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          capexMetadata_ = value;
          onChanged();
        } else {
          capexMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      public Builder setCapexMetadata(
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder builderForValue) {
        if (capexMetadataBuilder_ == null) {
          capexMetadata_ = builderForValue.build();
          onChanged();
        } else {
          capexMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      public Builder mergeCapexMetadata(com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata value) {
        if (capexMetadataBuilder_ == null) {
          if (capexMetadata_ != null) {
            capexMetadata_ =
              com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.newBuilder(capexMetadata_).mergeFrom(value).buildPartial();
          } else {
            capexMetadata_ = value;
          }
          onChanged();
        } else {
          capexMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      public Builder clearCapexMetadata() {
        if (capexMetadataBuilder_ == null) {
          capexMetadata_ = null;
          onChanged();
        } else {
          capexMetadata_ = null;
          capexMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder getCapexMetadataBuilder() {
        
        onChanged();
        return getCapexMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      public com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder getCapexMetadataOrBuilder() {
        if (capexMetadataBuilder_ != null) {
          return capexMetadataBuilder_.getMessageOrBuilder();
        } else {
          return capexMetadata_ == null ?
              com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.getDefaultInstance() : capexMetadata_;
        }
      }
      /**
       * <pre>
       * Exists only for compressed APEX
       * </pre>
       *
       * <code>.apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder> 
          getCapexMetadataFieldBuilder() {
        if (capexMetadataBuilder_ == null) {
          capexMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadata.Builder, com.android.apex.ApexManifestOuterClass.ApexManifest.CompressedApexMetadataOrBuilder>(
                  getCapexMetadata(),
                  getParentForChildren(),
                  isClean());
          capexMetadata_ = null;
        }
        return capexMetadataBuilder_;
      }

      private boolean supportsRebootlessUpdate_ ;
      /**
       * <pre>
       * Indicates that this APEX can be updated without rebooting device.
       * </pre>
       *
       * <code>bool supportsRebootlessUpdate = 13;</code>
       * @return The supportsRebootlessUpdate.
       */
      @java.lang.Override
      public boolean getSupportsRebootlessUpdate() {
        return supportsRebootlessUpdate_;
      }
      /**
       * <pre>
       * Indicates that this APEX can be updated without rebooting device.
       * </pre>
       *
       * <code>bool supportsRebootlessUpdate = 13;</code>
       * @param value The supportsRebootlessUpdate to set.
       * @return This builder for chaining.
       */
      public Builder setSupportsRebootlessUpdate(boolean value) {
        
        supportsRebootlessUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates that this APEX can be updated without rebooting device.
       * </pre>
       *
       * <code>bool supportsRebootlessUpdate = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearSupportsRebootlessUpdate() {
        
        supportsRebootlessUpdate_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:apex.proto.ApexManifest)
    }

    // @@protoc_insertion_point(class_scope:apex.proto.ApexManifest)
    private static final com.android.apex.ApexManifestOuterClass.ApexManifest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.apex.ApexManifestOuterClass.ApexManifest();
    }

    public static com.android.apex.ApexManifestOuterClass.ApexManifest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApexManifest>
        PARSER = new com.google.protobuf.AbstractParser<ApexManifest>() {
      @java.lang.Override
      public ApexManifest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ApexManifest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ApexManifest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ApexManifest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.apex.ApexManifestOuterClass.ApexManifest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apex_proto_ApexManifest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_apex_proto_ApexManifest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apex_proto_ApexManifest_CompressedApexMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_apex_proto_ApexManifest_CompressedApexMetadata_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023apex_manifest.proto\022\napex.proto\"\250\003\n\014Ap" +
      "exManifest\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(" +
      "\003\022\026\n\016preInstallHook\030\003 \001(\t\022\027\n\017postInstall" +
      "Hook\030\004 \001(\t\022\023\n\013versionName\030\005 \001(\t\022\016\n\006noCod" +
      "e\030\006 \001(\010\022\031\n\021provideNativeLibs\030\007 \003(\t\022\031\n\021re" +
      "quireNativeLibs\030\010 \003(\t\022\017\n\007jniLibs\030\t \003(\t\022\035" +
      "\n\025requireSharedApexLibs\030\n \003(\t\022\035\n\025provide" +
      "SharedApexLibs\030\013 \001(\010\022F\n\rcapexMetadata\030\014 " +
      "\001(\0132/.apex.proto.ApexManifest.Compressed" +
      "ApexMetadata\022 \n\030supportsRebootlessUpdate" +
      "\030\r \001(\010\0324\n\026CompressedApexMetadata\022\032\n\022orig" +
      "inalApexDigest\030\001 \001(\tB\022\n\020com.android.apex" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_apex_proto_ApexManifest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_apex_proto_ApexManifest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_apex_proto_ApexManifest_descriptor,
        new java.lang.String[] { "Name", "Version", "PreInstallHook", "PostInstallHook", "VersionName", "NoCode", "ProvideNativeLibs", "RequireNativeLibs", "JniLibs", "RequireSharedApexLibs", "ProvideSharedApexLibs", "CapexMetadata", "SupportsRebootlessUpdate", });
    internal_static_apex_proto_ApexManifest_CompressedApexMetadata_descriptor =
      internal_static_apex_proto_ApexManifest_descriptor.getNestedTypes().get(0);
    internal_static_apex_proto_ApexManifest_CompressedApexMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_apex_proto_ApexManifest_CompressedApexMetadata_descriptor,
        new java.lang.String[] { "OriginalApexDigest", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
